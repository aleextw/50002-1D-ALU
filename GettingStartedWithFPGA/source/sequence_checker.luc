module sequence_checker (
    input buttons[3],
    input button_reset,
    input clk,  // clock
    input rst,  // reset
    input exButton,
    input exButtons[15],
    output out_result[3],
    output out_buttonseq  
  ) 

{
  
  dff sequence[3](#INIT(0), .clk(clk), .rst(rst));
  dff result[3](#INIT(0),.clk(clk), .rst(rst));
  const MATCH = {b110, b101, b011}; // press button 4, then 3
  
  fsm brain(.clk(clk), .rst(rst)) = {
    WAITFIRSTPRESS,
    CHECKPRESS
  };
    

  always{     
    case (brain.q)
    {
      brain.WAITFIRSTPRESS:
        if (buttons[2] | buttons[1] | buttons[0]){ //if any IO button is pressed
            //TODO use the external button to change colours, depending on the state defined by ISA?
            //TODO use the external start button to light up all colours
            //each io_button press is saved to the sequence d flip flop
            if (buttons[0]){ //blue
                sequence.d = b110;
            } 
            
            else if (buttons[1]) { //green
                sequence.d = b101;
            }
            
            else if (buttons[2]) { //red
                sequence.d = b011;
            }
              
            brain.d = brain.CHECKPRESS;
          
        }
        else{
            if (sequence.q[2:0] == b000){
                // reset result 
                result.d = b111;
                brain.d = brain.WAITFIRSTPRESS; //if no press, loop
            } 
            
            else if (sequence.q[2:0] == b111){
                result.d = b000;
                brain.d = brain.WAITFIRSTPRESS; //if no press, loop
            }
        }
        
     brain.CHECKPRESS:
        //depending on the sequence d flip flop
        if (sequence.q[2:0] == MATCH[0]){
            result.d = b110; //blue is 110
        }
        else if (sequence.q[2:0] == MATCH[1]){
            result.d = b101; //green is 101
        }
        else if (sequence.q[2:0] == MATCH[2]){
            result.d = b011; //red is 011
        }
        else {
            result.d = b111; //hopefully dont light up
        }
        
        brain.d = brain.CHECKPRESS; 
        
        //if (buttons[0] | buttons[1] | buttons[2]) {
        
        if (button_reset) {
            sequence.d = b000;
            result.d = b000;
            brain.d = brain.WAITFIRSTPRESS;
        }
        
        else if (exButton) {
            sequence.d = b111;
            result.d = b111;
            brain.d = brain.WAITFIRSTPRESS;
        }
        
        else if (exButtons[0] | exButtons[1] | exButtons[2] | exButtons[3] | exButtons[4] | exButtons[5] | exButtons[6] | exButtons[7] | exButtons[8] | exButtons[9] | exButtons[10] | exButtons[11] | exButtons[12] | exButtons[13] | exButtons[14] ){
            sequence.d = b111;
            result.d = b111;
            brain.d = brain.WAITFIRSTPRESS;
        }
    }
    
    out_result = result.q;
    out_buttonseq = sequence.q;
    
}
}
