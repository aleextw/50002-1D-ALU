module pc_unit (
    input clk,  // clock
    input rst,  // reset
    input id[16],
    input ra[16],
    input pcsel[3],
    input slow_clock,
    output ia[16],
    output pc_4[16]
  ) {
  
  .clk(clk) {
    .rst(rst) {
      dff pc[16];
    }
  }
  
  sig internal_ia[16];
  sig internal_pc_4[16];
  
  always {
    ia = pc.q;
    pc_4 = pc.q + 4;
    if (slow_clock) {
      internal_ia = pc.q;
      internal_pc_4 = pc.q + 4;
      
      case(pcsel) {
        0: pc.d = internal_pc_4;
        1: pc.d = internal_pc_4 + id * 4;
        2: pc.d = c{internal_ia[15], ra[14:0]};
        3: pc.d = h8004;
        4: pc.d = h8008;  // KIV change these to smaller addresses
        default: pc.d = internal_pc_4;
      }
      
      ia = internal_ia;
      pc_4 = c{internal_ia[15], internal_pc_4[14:0]};
    }
    
  }
}
