/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    input [15:0] button,
    output reg [44:0] out_led,
    output reg [6:0] seven_seg
  );
  
  
  
  reg rst;
  
  wire [7-1:0] M_ss_decoder_segs;
  reg [4-1:0] M_ss_decoder_char;
  seven_seg_1 ss_decoder (
    .char(M_ss_decoder_char),
    .segs(M_ss_decoder_segs)
  );
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_2 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [16-1:0] M_sigma_level;
  wire [16-1:0] M_sigma_pegs;
  wire [16-1:0] M_sigma_selected_peg;
  wire [16-1:0] M_sigma_val_move;
  reg [16-1:0] M_sigma_buttons;
  sigma_cpu_3 sigma (
    .clk(clk),
    .rst(rst),
    .buttons(M_sigma_buttons),
    .level(M_sigma_level),
    .pegs(M_sigma_pegs),
    .selected_peg(M_sigma_selected_peg),
    .val_move(M_sigma_val_move)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    led = {7'h00, rst};
    usb_tx = usb_rx;
    M_sigma_buttons = button;
    out_led[0+14-:15] = ~M_sigma_val_move[0+14-:15];
    out_led[15+14-:15] = ~M_sigma_pegs[0+14-:15];
    out_led[30+14-:15] = ~M_sigma_selected_peg[0+14-:15];
    M_ss_decoder_char = M_sigma_selected_peg[0+3-:4];
    seven_seg = ~M_ss_decoder_segs;
  end
endmodule
